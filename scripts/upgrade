#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? admin=$(ynh_app_setting_get --app=$app --key=admin)
#REMOVEME? port=$(ynh_app_setting_get --app=$app --key=port)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? data_dir=$(ynh_app_setting_get --app=$app --key=data_dir)
#REMOVEME? auth=$(ynh_app_setting_get --app=$app --key=auth)
#REMOVEME? hashed_password=$(ynh_app_setting_get --app=$app --key=hashed_password)
#REMOVEME? enable_proposed_api=$(ynh_app_setting_get --app=$app --key="enable_proposed_api")
#REMOVEME? extensions_gallery=$(ynh_app_setting_get --app=$app --key="extensions_gallery")

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

if ynh_compare_current_package_version -c le -v "3.11.0~ynh1"
then
#REMOVEME? 	extension_service_url=$(ynh_app_setting_get --app=$app --key="extension_service_url")
#REMOVEME? 	extension_item_url=$(ynh_app_setting_get --app=$app --key="extension_item_url")

	if [ "$extension_service_url" ] && [ "$extension_item_url" ]
	then
		extensions_gallery="{\"serviceUrl\": \"$extension_service_url\",\"itemUrl\": \"$extension_item_url\"}"

		ynh_app_setting_set --app=$app --key="extensions_gallery" --value="$extensions_gallery"

		ynh_app_setting_delete --app=$app --key="extension_service_url"
		ynh_app_setting_delete --app=$app --key="extension_item_url"
	fi

	if [ "$enable_proposed_api" ]
	then
		ynh_print_warn --message="Custom enable-proposed-api. You have to enable again them through application config panel."
		ynh_print_warn --message="enable-proposed-api was set to: $enable_proposed_api"

		ynh_app_setting_delete --app=$app --key="enable_proposed_api"
	fi

	if [ "$hashed_password" ]
	then
		auth="password"
	else
		auth="none"
	fi
	ynh_app_setting_set --app=$app --key="auth" --value=$auth

	ynh_remove_fail2ban_config

#REMOVEME? 	ynh_secure_remove --file=$install_dir
	mkdir -p $install_dir
fi

if ynh_compare_current_package_version -c le -v "4.1.0~ynh1"
then
	new_data_dir=/home/$app/.local/share/code-server
	mkdir -p $new_data_dir

	cp -R $data_dir/* $new_data_dir
#REMOVEME? 	ynh_secure_remove --file=$data_dir

	data_dir=new_data_dir
#REMOVEME? 	ynh_app_setting_set --app=$app --key=data_dir --value=$data_dir
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" 
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R root:$admin "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# ...
#=================================================

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="config.yaml" --destination="$install_dir/config.yaml"
ynh_add_config --template="code-server.env" --destination="$install_dir/code-server.env"

if [ "$auth" == "password" ]
then
	echo "hashed-password: $hashed_password" >> "$install_dir/config.yaml"
fi

chmod 440 "$install_dir/config.yaml" "$install_dir/code-server.env"
chown root:$admin "$install_dir/config.yaml" "$install_dir/code-server.env"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..." --weight=1

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="VS Code Server" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
